%matplotlib inline
import pandas as pd
import sys
import scipy
import scipy.stats as ss
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import random
ct_test = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/SAT_District_Participation.csv")
ct_test.head(5)
mean_rate = ct_test['Participation Rate'].mean()
stdev_rate =ct_test['Participation Rate'].std(ddof=0)
print('Mean participation rate is {:.3f}'.format(mean_rate))
print('Standard deviation is {:.3f}'.format(stdev_rate))
zscore_rate = ss.zscore(ct_test['Participation Rate'], ddof=0,nan_policy = 'omit')
ct_test = ct_test.assign(zscore=zscore_rate)
ct_test.head(8)
def plot_anomaly(score_data, threshold):
  score_data = score_data.copy().sort_values(ascending = False).values
  ranks = np.linspace(1, len(score_data), len(score_data))
  mask_outlier = (score_data < threshold)
  
  plt.figure(dpi = 150)
  plt.plot(ranks[~mask_outlier], score_data[~mask_outlier], 'o', color = 'b', label = 'OK schools')
  plt.plot(ranks[mask_outlier], score_data[mask_outlier], 'o', color = 'r', label = 'OK anomalies')
  plt.axhline(threshold, color='r', label = 'threshold',alpha =0.5)
  plt.legend(loc = 'lower left')
  plt.title('Z-score vs. school district', fontweight = 'bold')
  plt.xlabel('Ranked School district')
  plt.ylabel('Z-score')
  plt.show()
plot_anomaly(ct_test['zscore'], -2)
nbins = 20
n_hist, bins_hist, patches_hist = plt.hist(ct_test['Participation Rate'], nbins, density = False, cumulative=False, linewidth = 1.0, label = 'data')
num_bins = 131
normal_dist = [random.gauss(mean_rate,stdev_rate) for _ in range(131)]
n, bins, patches = plt.hist(ct_test['Participation Rate'], num_bins, density = True, histtype = 'step', cumulative= True, linewidth= 1.0, label = 'data')
plt.hist(normal_dist, num_bins,density = True, histtype = 'step', cumulative = True, linewidth = 1.0, label = 'normal distribution')
plt.grid(True)
plt.legend(loc = 'upper left')
axes = plt.gca()
axes.set_xlim([0.2,1])
plt.xlabel('Participation Rate')
plt.ylabel('Cumulative probability')
plt.show()
